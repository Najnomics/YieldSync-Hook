version: '3.8'

services:
  # YieldSync Operator
  yieldsync-operator:
    build:
      context: .
      dockerfile: operator.Dockerfile
    container_name: yieldsync-operator
    restart: unless-stopped
    environment:
      - RUST_LOG=info
    volumes:
      - ./operator/keys:/app/keys:ro
      - ./operator/data:/app/data
      - ./operator/config-files:/app/config-files:ro
    ports:
      - "8080:8080"  # Metrics
      - "8081:8081"  # Node API
    networks:
      - yieldsync-network
    depends_on:
      - prometheus
      - grafana

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: yieldsync-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - yieldsync-network

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: yieldsync-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - yieldsync-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: yieldsync-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - yieldsync-network

  # PostgreSQL for data storage
  postgres:
    image: postgres:15-alpine
    container_name: yieldsync-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=yieldsync
      - POSTGRES_USER=yieldsync
      - POSTGRES_PASSWORD=yieldsync_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - yieldsync-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: yieldsync-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - yieldsync-operator
      - grafana
    networks:
      - yieldsync-network

volumes:
  prometheus_data:
  grafana_data:
  redis_data:
  postgres_data:

networks:
  yieldsync-network:
    driver: bridge
