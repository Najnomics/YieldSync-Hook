name: Deploy

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'testnet'
        type: choice
        options:
        - testnet
        - mainnet

env:
  FOUNDRY_PROFILE: production

jobs:
  deploy-testnet:
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'testnet'
    name: Deploy to Testnet
    runs-on: ubuntu-latest
    environment: testnet
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Deploy to Holesky Testnet
        run: |
          forge script script/DeployTestnet.s.sol:DeployTestnet \
            --rpc-url ${{ secrets.HOLESKY_RPC_URL }} \
            --broadcast \
            --verify \
            --verifier-url https://api-holesky.etherscan.io/api \
            --verifier etherscan \
            --etherscan-api-key ${{ secrets.ETHERSCAN_API_KEY }} \
            -vvvv
        env:
          PRIVATE_KEY: ${{ secrets.TESTNET_PRIVATE_KEY }}

      - name: Save deployment addresses
        run: |
          echo "Deployment completed on Holesky testnet"
          echo "Contract addresses saved to broadcast/"

  deploy-mainnet:
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.environment == 'mainnet'
    name: Deploy to Mainnet
    runs-on: ubuntu-latest
    environment: mainnet
    needs: deploy-testnet
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Deploy to Mainnet
        run: |
          forge script script/DeployMainnet.s.sol:DeployMainnet \
            --rpc-url ${{ secrets.MAINNET_RPC_URL }} \
            --broadcast \
            --verify \
            --verifier-url https://api.etherscan.io/api \
            --verifier etherscan \
            --etherscan-api-key ${{ secrets.ETHERSCAN_API_KEY }} \
            -vvvv
        env:
          PRIVATE_KEY: ${{ secrets.MAINNET_PRIVATE_KEY }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  deploy-anvil:
    name: Deploy to Anvil (Local)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Start Anvil
        run: |
          anvil --host 0.0.0.0 --port 8545 --chain-id 31337 &
          sleep 10

      - name: Deploy to Anvil
        run: |
          forge script script/DeployAnvil.s.sol:DeployAnvil \
            --rpc-url http://localhost:8545 \
            --broadcast \
            -vvvv
        env:
          PRIVATE_KEY: 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
